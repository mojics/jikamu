// Generated by CoffeeScript 1.6.2
(function() {
  var Jikamu, cashier_app, cashier_page, cashier_page_summary, cashier_route, nameRegex, pathNameRegex, pathNameReplacement, splatNameRegex, splatNameReplacement, _ref;

  if ((_ref = window.Jikamu) == null) {
    window.Jikamu = {};
  }

  Jikamu = function(config) {
    return this;
  };

  /*
  Check if jQuery library exists
  */


  Jikamu.$ = window.jQuery ? jQuery : void 0;

  Jikamu.$.address = Jikamu.$.address ? Jikamu.$.address : void 0;

  /*
  Jikamu Application
  */


  Jikamu.App = (function() {
    function App() {}

    App.prototype.routes = [];

    App.prototype.addPage = function(_page) {
      this.routes.push({
        "deposit/onlinedebit/(*)": _page
      });
      return this;
    };

    App.prototype.handleRequest = function() {
      return this;
    };

    App.prototype.loadPage = function(current_controller) {
      return this.routes[1];
    };

    return App;

  })();

  /*
  Jikamu.Page - Handles Routing for pages in Cashier
  */


  Jikamu.Page = (function() {
    function Page() {
      this.properties = {
        page_name: false,
        controller: function() {},
        before_load: function() {},
        after_load: function() {}
      };
    }

    Page.prototype.page_name = function(new_page_name) {
      this.properties.page_name = new_page_name;
      return this;
    };

    Page.prototype.controller = function(new_controller) {
      this.properties.controller = new_controller;
      return this;
    };

    Page.prototype.before_load = function(new_before_load) {
      this.properties.before_load = new_before_load;
      return this;
    };

    Page.prototype.after_load = function(new_after_load) {
      this.properties.after_load = new_after_load;
      return this;
    };

    return Page;

  })();

  /*
  Cashier Router
  Requires a Page object and this will be serve as the page for the Apps, and it will add the URL rules that will be needed by the Router Class later on
  */


  pathNameRegex = /:([\w\d]+)/g;

  pathNameReplacement = "([^/]+)";

  splatNameRegex = /\*([\w\d]+)/g;

  splatNameReplacement = "(.*)";

  nameRegex = /[:|\*]([\w\d]+)/g;

  Jikamu.Route = (function() {
    function Route(route_config) {
      this.properties = {
        urlpath: false,
        page: function() {}
      };
    }

    Route.prototype.urlpath = function(new_urlpath) {
      var str;

      str = new_urlpath.replace(pathNameRegex, pathNameReplacement).replace(splatNameRegex, splatNameReplacement);
      console.log(str);
      if (new_urlpath) {
        this.properties.urlpath = str;
        return this;
      } else {
        throw "Jikamu.Route: Empty or Invalid url path";
      }
    };

    Route.prototype.page = function(new_page) {
      if (new_page instanceof Jikamu.Page) {
        this.properties.page = new_page;
        return this;
      } else {
        throw "Jikamu.Route Error: Invalid data type on adding page";
      }
    };

    return Route;

  })();

  /*
  Test Jikamu Page
  */


  cashier_page = new Jikamu.Page().page_name('deposit').controller(function() {
    return console.log("Main page");
  }).after_load(function() {
    return console.log("after loading");
  }).before_load(function() {
    return console.log("before loading page");
  });

  cashier_page_summary = new Jikamu.Page().page_name('summary').controller(function() {
    return console.log("Main page");
  }).after_load(function() {
    return console.log("after loading");
  }).before_load(function() {
    return console.log("before loading page");
  });

  cashier_route = new Jikamu.Route().urlpath('/test/:id').page(new Jikamu.Page());

  /*
  Test CashierAPP
  */


  console.log("#### JIKAMUJS ####");

  cashier_app = new Jikamu.App;

  cashier_app.addPage(cashier_page);

  cashier_app.addPage(cashier_page_summary);

  console.log(cashier_app);

  console.log("#### Route TEST ####");

  console.log(cashier_route.properties);

  console.log("#### Jikamu jQuery Address ####");

  console.log(Jikamu.$.address.path.call());

}).call(this);
